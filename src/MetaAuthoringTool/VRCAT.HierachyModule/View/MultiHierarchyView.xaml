<UserControl x:Class="VRCAT.HierarchyModule.MultiHierarchyView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:XCmd="clr-namespace:WPFXCommand;assembly=WPFXCommand"
             xmlns:local="clr-namespace:VRCAT.HierarchyModule"
             xmlns:prism="http://www.codeplex.com/prism"
             xmlns:service="bucketplay.com"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <Style TargetType="{x:Type TreeViewItem}" x:Key="MultiSelectTreeViewItemStyle" >
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="MinHeight" Value="21"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,4,2,3"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="FocusVisualStyle" Value="{DynamicResource TreeViewItemFocusVisual}"/>
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            <Setter Property="local:MultiSelectTreeView.IsItemSelected" Value="{Binding IsItemSelected, Mode=TwoWay}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <ControlTemplate.Resources>
                            <local:LeftMarginMultiplierConverter Length="15" x:Key="LengthConverter" />
                        </ControlTemplate.Resources>
                        <StackPanel>
                            <Border Name="Bd"
                                      Background="{TemplateBinding Background}"
                                      Padding="{TemplateBinding Padding}">
                                <Grid Margin="{Binding Converter={StaticResource LengthConverter},
                                         RelativeSource={RelativeSource TemplatedParent}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="15"/>
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="Expander" 
                                              Grid.Column="0"
                                              Style="{DynamicResource TreeViewToggleButtonStyle}"
                                              IsChecked="{Binding Path=IsExpanded,
                                    RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press"/>

                                    <ContentPresenter x:Name="PART_Header" 
                                                  Grid.Column="1"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="21"/>
                            </MultiTrigger>
                            <Trigger Property="local:MultiSelectTreeView.IsItemSelected" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource SelectedListItem}"/>
                                <Setter Property="Foreground" Value="{DynamicResource SelectedListItemForeground}"/>
                                <Setter Property="Style" TargetName="Expander" Value="{DynamicResource TreeViewSelectedToggleButtonStyle}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" SourceName="Bd" Value="true"/>
                                    <Condition Property="local:MultiSelectTreeView.IsItemSelected" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource MouseOverListItem}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource TreeViewDisabledForeground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <HierarchicalDataTemplate x:Key="SceneDatatemplate" ItemsSource="{Binding ChildObject}">
            <service:EditableTextBlock Text="{Binding Name}" Padding="0,0,20,0" HorizontalAlignment="Stretch" IsInEditMode="{Binding IsEditMode,Mode=TwoWay}"/>
        </HierarchicalDataTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Border Grid.Row="0" BorderBrush="Black" BorderThickness="1">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock Text="Search" Foreground="White" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBox x:Name="textBox" Margin="10,0,0,0" HorizontalAlignment="Stretch" Grid.Column="1">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding TextChanged}" CommandParameter="{Binding ElementName=textBox}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
            </Grid>
        </Border>
        <local:MultiSelectTreeView  x:Name="MultiSelectTreeView"
                                Grid.Row="1"
                                ItemsSource="{Binding SceneObject}" 
                                SelectedItems="{Binding SelectedItems}" 
                                ItemTemplate="{StaticResource SceneDatatemplate}"
                                service:DragDrop.IsDropTarget="True"
                                service:DragDrop.IsDragSource="True"
                                service:DragDrop.DropHandler="{Binding}"
                                XCmd:KeyDown.Command="{Binding KeyDownCommand}"
                                XCmd:KeyDown.CommandParameter="{Binding ElementName=MultiSelectTreeView,Path=StartItem}"
                                VirtualizingStackPanel.IsVirtualizing="True"
                                    VerticalAlignment="Stretch"
                                BorderThickness="0"
                                >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="OnSelectItem">
                    <i:InvokeCommandAction Command="{Binding SelectedItemChange}" CommandParameter="{Binding ElementName=MultiSelectTreeView, Path=SelectedItems}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="OnSendSelectedItemToInspector">
                    <i:InvokeCommandAction Command="{Binding SendSelectedItemToInspector}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MultiSelectTreeViewItemStyle}"/>
            </TreeView.ItemContainerStyle>
            <TreeView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="3D Object">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <prism:InvokeCommandAction Command="{Binding CreateObject}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <MenuItem Header="Container"/>
                        <MenuItem Header="Camera"/>
                        <MenuItem Header="Light"/>
                        <MenuItem Header="Cube" IsEnabled="False"/>
                        <MenuItem Header="Sphere" IsEnabled="False"/>
                        <Separator/>
                    </MenuItem>
                    <MenuItem Header="2D Object">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <prism:InvokeCommandAction Command="{Binding CreateObject}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <MenuItem Header="2D Texture"/>
                        <MenuItem Header="2D Button"/>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Delete" XCmd:MouseLeftButtonDown.Command="{Binding DeleteObject}" />
                    <Separator/>
                    <MenuItem Header="Focus" XCmd:MouseLeftButtonDown.Command="{Binding FocusObject}" />
                    <Separator/>
                    <MenuItem Header="Test">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <prism:InvokeCommandAction Command="{Binding TestBehavior}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                </ContextMenu>
            </TreeView.ContextMenu>
        </local:MultiSelectTreeView>
    </Grid>
</UserControl>
